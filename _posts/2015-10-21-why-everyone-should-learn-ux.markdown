---
layout:           post
title:            "ตำแหน่งไหนบ้างที่ใช้ UX แล้วงานลดลง"
date:             2015-10-21T05:00:00+05:45
last_modified_at: 2015-10-21T13:00:00+05:45
categories:       study
author:           Apirak
banner:           study
image:            /images/blog/food_order_paper.jpg
tags:             ["management", "development", "ux"]
---


อยากให้เราลองนึกย้อนไปที่ร้านอาหาร แล้วลองคิดดูว่าการจะได้อาหารสักหนึ่งจาน จะต้องผ่านใครบ้าง แล้วแต่ละคนมีส่วนอย่างไรต่ออาหารแต่ละจาน ถ้าคนที่ออกไปซื้ออาหารคิดแต่จะซื้อวัตถุดิบที่ดีที่สุด โดยไม่คิดถึงคนทานเลย จะสามารถหาวัตถุดิบที่เหมาะพ่อครัวที่จะต้องปรุงอาหารให้กับลูกค้าได้หรือไม่ ถ้าผู้บริหารคิดถึงแต่ความอยู่รอดของร้าน คิดเรื่องต้นทุน การบริหารและผลกำไร จะสามารถสร้างความพึงพอใจให้กับลูกค้าได้หรือไม่

![food order paper](/images/blog/food_order_paper.jpg)

ผมคิดว่าคำตอบมันค่อนข้างชัดเจนว่า ถ้าต้องการหาวัตถุดิบให้ดีที่สุดก็ต้องรู้ว่าใครจะเป็นคนกิน แล้วเดาทางพ่อครัวว่าอยากจะทำในแนวไหนจึงจะหาวัตถุดิบที่เหมาะสมได้ ถ้าต้องการให้ร้านอยู่รอดก็ต้องคิดถึงลูกค้า ว่าอยากกินอะไร แนวไหน ราคาเท่าไหร การรู้จักลูกค้าจึงเป็นจุดเริ่มต้นของการรู้วิธีทำกำไรและวิธีดึงลูกค้าให้อยู่กับร้านเราได้

<!--more-->

แล้วในวงการพัฒนาซอร์ฟแวร์ แต่ละตำแหน่งจะได้ประโยชน์อะไรจากการคิดถึง UX

**UI Designer** เริ่มจากตำแหน่งที่มักจะถูกจับให้ทำงานด้าน UX กันก่อน เรามักเห็น UI Designer ถูกจับให้ทำ UX อยู่บ่อยๆ ทั้งๆ ตำแหน่งนี้มักอยู่ห่างไกลจาก User มากๆ ตำแหน่งนี้มักจะรู้ความต้องการของผู้ใช้จาก Project Manager ซึ่งฟังมากจาก System Architech ซึ่งไปถามความต้องการมาจาก Manager ของลูกค้า แล้ว Manager ก็เดาลักษณะของลูกค้ามาให้ ซึ่งทำให้ความเข้าใจในตัวผู้ใช้มันผิดเพี้ยนไปมาก จนแทบเป็นไปไม่ได้ที่จะออกแบบ UI ให้ตรงกับสิ่งที่ผู้ใช้จริงๆ อยากได้

แต่ถ้า UI Designer ได้เรียนรู้ว่า UX คือการเข้าใจลูกค้าให้ดีกว่าที่เค้าเข้าใจตัวเอง ตัว UI Designer จะเริ่มรู้ว่าการเข้าถึงตัวผู้ใช้เป็นสิ่งจำเป็นและเริ่มถามคำถามที่ PM, SA, Manager ไม่สามารถตอบได้ ซึ่งเพิ่มโอกาสที่จะได้เข้าถึงตัวลูกค้ามากขึ้น

เมื่อเข้าใจลูกค้าแล้วงานออกแบบก็ตรงกับความต้องการมากขึ้น เวลาที่ PM, SA, Manager ต้องการเปลี่ยน UI คนออกแบบก็สามารถชี้แจงเหตุและผลของตัวปัจจุบันได้ ถ้าจะมีการเปลี่ยนแปลใดๆ ก็จะเป็นการเปลี่ยนที่มีหลักการ แทนที่จะใช้ความรู้สึกในการตัดสิน

ลองคิดดูว่า ถ้า UI Designer ไม่รู้ UX การแก้แบบไม่มีที่สิ้นสุดจะเกิดขึ้นขนาดไหน

**Developer** สำหรับนักพัฒนาถ้าดูเผินๆ เหมือนจะไม่ต้องสนใจผู้ใช้ เพราะแค่ทำตาม spec ที่กำหนดไว้แล้วเท่านั้น แต่ใจความเป็นจริงแล้ว ตัว spec นั้นไม่ได้ชัดเจนเพียงพอที่จะทำให้ Developer ไม่ต้องคิดเอาเองว่าโปรแกรมต้องออกมาเป็นอย่างไร

ถ้า Developer เข้าใจผู้ใช้ ก็จะทำให้สามารถออกแบบโปรแกรมให้รองรับรูปแบบการใช้งานต่างๆ ได้อย่างครบถ้วน หรือสามารถบอกกับ PM, SA และ UI Designer ได้ว่าปัญหาของผู้ใช้นั้นสามารถใช้ Solution ใดในการแก้ที่ง่ายที่สุด

ในความเป็นจริง Developer เป็นคนที่รู้ดีที่สุดว่าโปรแกรมควรออกมาเป็นอย่างไร เพราะเป็นคนที่รู้ข้อจำกัดของโปรแกรมมากที่สุด รู้ว่าอะไรทำง่าย อะไรทำยาก รู้ว่าระบบปัจจุบันมี library อะไรที่สามารถใช้ได้เลย โดยที่ไม่ต้องพัฒนาขึ้นมาใหม่ ถ้า Developer เลือกทำอะไรที่ง่ายแล้วตอบโจทย์ของผู้ใช้ได้ก็จะช่วยให้งานลดลงมหาศาล เช่น ฟอร์ม register ที่

ลองคิดดูว่า ถ้า Developer ต้องพัฒนาโปรแกรม ตามแบบที่คนที่ไม่เข้าใจพื้นฐานของระบบเป็นคนออกแบบ จะมีงานที่ต้องเสียเวลาทำทั้งๆ ที่ไม่จำเป็นมากมายขนาดไหน


**QA** เป็นอีกตำแหน่งที่บริษัทส่วนมาก ไม่สนใจที่จะให้ทำ UX เลย เพราะโดยทั้วไปแล้วตำแหน่งนี้มีไว้หา Bug ของระบบ มีไว้ตรวจสอบว่า Developer ทำอะไรผิดพลาดบ้าง แต่ในปัจจุบันเราทำ TDD (Test Driven Development) กันแล้ว งานของ QA จะเริ่มเปลี่ยนจากการเขียน Matrix แล้วหาว่าโปรแกรมสามารถทำงานได้ผ่านทุกเงื่อนไขหรือเปล่า ไปเป็นการทำงานที่มีแต่คนเท่านั้นที่ทำได้

นั้นคือการเข้าใจว่าผู้ใช้ต้องการใช้โปรแกรมอย่างไร ถ้า QA เข้าใจ UX เค้าจะเข้าใจปัญหาของการใช้งาน ไม่ใช่ปัญหาความผิดพลาดของระบบ และสามารถช่วย Product Owner ในการเรียงลำดับงานได้

คำว่า Quality ของ QA จะเริ่มเปลี่ยนจากการวัดว่าโปรแกรมทำงานได้ถูกหรือไม่ ไปเป็นผู้ใช้จะรักโปรแกรมนี้หรือเปล่า

ลองคิดดูว่า ถ้า QA ไม่รู้จัก UX ปัญหาต่างๆ ที่เค้าพบจะมีความสำคัญเท่ากันไปหมดเลยเพราะล้วนเป็นปัญหาของการใช้งานทั้งสิ้น แล้วอย่างนี้เมื่อไหรปัญหาที่สำคัญกับผู้ใช้จริงๆ จะได้ถูกแก้ไข

สำหรับ Product Owner, Project Manager, CEO ไว้ต่อตอนหน้านะครับ
